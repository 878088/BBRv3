name: Build Linux Kernel

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 4096
          swap-size-mb: 512
          remove-dotnet: 'true'
          remove-android: 'true'  
          
      - name: Checkout
        uses: actions/checkout@main
      - uses: actions/setup-node@v3.8.1
        with:
          node-version: '18'
      
      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt install git build-essential libncurses-dev libssl-dev libelf-dev bison bc flex rsync debhelper -y

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1.8.3
        with:
          version: "16"

      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: Clone and configure kernel
        run: |
          git clone --branch linux-6.5.y --jobs=0 https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git
          cd linux
          git remote add google-bbr https://github.com/google/bbr.git
          git fetch google-bbr
          git checkout linux-6.5.y
          echo "Merge remote-tracking branch 'google-bbr/v3' into linux-6.5.y" > .git/MERGE_MSG
          git merge

      - name: Get .config
        run: curl -sSL https://raw.githubusercontent.com/BPG8780/BBR/main/AMD/.config > linux/.config

      - name: Setup cache
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/sccache
          key: sccache-${{ hashFiles('linux/.config') }}-llvm
          
      - name: Compile x86_64 Kernel
        run: |
          cd linux
          make -j$(nproc) LLVM=1 CC="sccache clang" HOSTCC="sccache clang" olddefconfig
          make -j$(nproc) LLVM=1 CC="sccache clang" HOSTCC="sccache clang" deb-pkg
          
      - name: Create Artifact
        uses: actions/upload-artifact@v2
        with:
          name: kernel-package
          path: linux/*.deb
      - name: Trigger aarch64 build workflow
        uses: actions/github-script@v5
        with:
          script: |
          const token = process.env.GITHUB_TOKEN;
          const owner = process.env.GITHUB_REPOSITORY.split("/")[0];
          const repo = process.env.GITHUB_REPOSITORY.split("/")[1];
          const ref = process.env.GITHUB_REF;
          const sha = process.env.GITHUB_SHA;
          const workflow_file = 'aarch64-build.yml';
          const octokit = require('@octokit/rest')();
          octokit.authenticate({ type: 'token', token: token });
          octokit.actions.createWorkflowDispatch({
          owner: owner,
          repo: repo,
          ref: ref,
          workflow_id: workflow_file,
          inputs: {
            trigger_sha: sha
          }
        });
          
aarch64-build:
    runs-on: ubuntu-latest
  
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 4096
          swap-size-mb: 512
          remove-dotnet: 'true'
          remove-android: 'true'  
          
      - name: Checkout
        uses: actions/checkout@main
      - uses: actions/setup-node@v3.8.1
        with:
          node-version: '18'
      
      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install git build-essential libncurses-dev libssl-dev libelf-dev bison bc flex rsync debhelper screen -y

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1.8.3
        with:
          version: "16"

      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: Clone and configure kernel
        run: |
          git clone --branch linux-6.5.y --jobs=0 https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git
          cd linux
          git remote add google-bbr https://github.com/google/bbr.git
          git fetch google-bbr
          git checkout linux-6.5.y
          echo "Merge remote-tracking branch 'google-bbr/v3' into linux-6.5.y" > .git/MERGE_MSG
          git merge

      - name: Get .config
        run: curl -sSL https://raw.githubusercontent.com/BPG8780/BBR/main/AMD/.config > linux/.config

      - name: Setup cache
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/sccache
          key: sccache-${{ hashFiles('linux/.config') }}-llvm
      - name: Get .config
        run: curl -sSL https://raw.githubusercontent.com/BPG8780/BBR/main/ARM/.config > linux/.config
        
      - name: Setup cache
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/sccache
          key: sccache-${{ hashFiles('linux/.config') }}-llvm        
          
      - name: Compile aarch64 Kernel
        run: |
          cd linux
          make -j$(nproc) LLVM=1 ARCH=arm64 CC="sccache clang" HOSTCC="sccache clang" olddefconfig
          make -j$(nproc) LLVM=1 ARCH=arm64 CC="sccache clang" HOSTCC="sccache clang" deb-pkg
          
      - name: Create Artifact
        uses: actions/upload-artifact@v2
        with:
          name: kernel-package
          path: linux/*.deb
      - name: Trigger release workflow
        uses: actions/github-script@v5
        with:
          script: |
          const token = process.env.GITHUB_TOKEN;
          const owner = process.env.GITHUB_REPOSITORY.split("/")[0];
          const repo = process.env.GITHUB_REPOSITORY.split("/")[1];
          const ref = process.env.GITHUB_REF;
          const sha = process.env.GITHUB_SHA;
          const workflow_file = 'release.yml';
          const octokit = require('@octokit/rest')();
          octokit.authenticate({ type: 'token', token: token });
          octokit.actions.createWorkflowDispatch({
          owner: owner,
          repo: repo,
          ref: ref,
          workflow_id: workflow_file,
          inputs: {
            trigger_sha: sha
          }
        });